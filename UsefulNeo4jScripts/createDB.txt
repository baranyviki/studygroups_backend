CREATE CONSTRAINT ON (node:User) ASSERT node.UserID IS UNIQUE
CREATE CONSTRAINT ON (node:UserName) ASSERT node.UserName IS UNIQUE
CREATE CONSTRAINT ON (node:Subject) ASSERT node.SubjectID IS UNIQUE
CREATE CONSTRAINT ON (node:Course) ASSERT node.CourseID IS UNIQUE
CREATE CONSTRAINT ON (node:Teacher) ASSERT node.TeacherID IS UNIQUE
CREATE CONSTRAINT ON (node:Teacher) ASSERT node.Name IS UNIQUE
CREATE CONSTRAINT ON (node:Subject) ASSERT node.SubjectCode IS UNIQUE


CALL apoc.uuid.install('User', {addToExistingNodes: true, uuidProperty: 'UserID'}) yield label, installed, properties
CALL apoc.uuid.install('Subject', {addToExistingNodes: true, uuidProperty: 'SubjectID'}) yield label, installed, properties
CALL apoc.uuid.install('Course', {addToExistingNodes: true, uuidProperty: 'CourseID'}) yield label, installed, properties
CALL apoc.uuid.install('Teacher', {addToExistingNodes: true, uuidProperty: 'TeacherID'}) yield label, installed, properties


CALL apoc.import.csv(
  [{fileName: 'file:///courses.csv', labels: ['Course']},
  {fileName: 'file:///subjects.csv', labels: ['Subject']},
  {fileName: 'file:///students.csv', labels: ['Student','User']},
  {fileName: 'file:///teachers.csv', labels: ['Teacher']}
  ],
  [{fileName: 'file:///courseSubject.csv', type: 'BELONGS_TO'},
  {fileName: 'file:///courseTeacher.csv', type: 'TEACHING'},
  {fileName: 'file:///subjectGrades.csv', type: 'ENROLLED_TO'},
  {fileName: 'file:///courseStudents.csv', type: 'ATTENDS'}
  ],
  {delimiter: ';', arrayDelimiter: ',', stringIds: false}
)


Match (u1:Student)
WHERE u1.FirstName IS NULL
WITH split(u1.Name,' ') as splitted, u1 as usr
SET usr.FirstName =splitted[1], usr.LastName=splitted[0]
RETURN usr.FirstName, usr.LastName


match (c:Course)-[:BELONGS_TO]-(s:Subject)
return s,c

MATCH (stud:Student{UserID:"ca3f0188-dfed-4202-8a29-1bdd01c86354"})
MATCH (subj:Subject{SubjectID:"d48d6828-bca7-4a0a-8b34-ac91732e2c5c"})
MERGE (stud)-[r:TEST {Semester:'2017/18/1'} ]->(subj)
ON CREATE set r.Grade = 2
ON MATCH set  r.Grade = 3
return stud,subj,r,type(r)


MATCH (u:Student {UserID:"008c0384-328a-4b74-be60-1738a99cbe08"})
MATCH (c:Course {CourseID:"b5900353-dc69-4a9e-949a-ea715792e5c7"})
MERGE (u)-[r:TEST]-(c)
return u,r,c
