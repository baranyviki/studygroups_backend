+===================================+
|		StudyGroups database		|
|				setup				|
+===================================+

//neo4j browser settings > Enable multi statement query editor > true
//UNIQUE megszorítások létrehozása
CREATE CONSTRAINT ON (node:User) ASSERT node.UserID IS UNIQUE;
CREATE CONSTRAINT ON (node:User) ASSERT node.UserName IS UNIQUE;
CREATE CONSTRAINT ON (node:Subject) ASSERT node.SubjectID IS UNIQUE;
CREATE CONSTRAINT ON (node:Course) ASSERT node.CourseID IS UNIQUE;
CREATE CONSTRAINT ON (node:Teacher) ASSERT node.TeacherID IS UNIQUE;
CREATE CONSTRAINT ON (node:Teacher) ASSERT node.Name IS UNIQUE;
CREATE CONSTRAINT ON (node:Subject) ASSERT node.SubjectCode IS UNIQUE;

//automatikusan generált ID-k létrehozása
CALL apoc.uuid.install('User', {addToExistingNodes: true, uuidProperty: 'UserID'}) yield label, installed, properties;
CALL apoc.uuid.install('Subject', {addToExistingNodes: true, uuidProperty: 'SubjectID'}) yield label, installed, properties;
CALL apoc.uuid.install('Course', {addToExistingNodes: true, uuidProperty: 'CourseID'}) yield label, installed, properties;
CALL apoc.uuid.install('Teacher', {addToExistingNodes: true, uuidProperty: 'TeacherID'}) yield label, installed, properties;

//tesztadatok importálása az adatbázisba
CALL apoc.import.csv(
  [{fileName: 'file:///courses.csv', labels: ['Course']},
  {fileName: 'file:///subjects.csv', labels: ['Subject']},
  {fileName: 'file:///students.csv', labels: ['Student','User']},
  {fileName: 'file:///teachers.csv', labels: ['Teacher']}
  ],
  [{fileName: 'file:///courseSubject.csv', type: 'BELONGS_TO'},
  {fileName: 'file:///courseTeacher.csv', type: 'TEACHES'},
  {fileName: 'file:///subjectGrades.csv', type: 'ENROLLED_TO'},
  {fileName: 'file:///courseStudents.csv', type: 'ATTENDS'}
  ],
  {delimiter: ';', arrayDelimiter: ',', stringIds: true}
);


//admin felhasználó létrehozása, jelszó ugyanaz mint a felhasználónév
CREATE (n:User:Admin)
SET n.UserName= 'admin', 
n.Password="AQAAAAEAACcQAAAAEGYMGokn5vJUWUv0tmF+Qo069MpAJhlSqpSpcAfyfptZ4D/j3ggxSvCuQTS5HcZxBg=="
return n;

//szerveroldali alkalmazás által használt user létrehozása
CALL dbms.security.createUser('backend', 'backend', false);